//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeDBNewEntities : DbContext
    {
        public EmployeeDBNewEntities()
            : base("name=EmployeeDBNewEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Registration> Registrations { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual int EmailExitOrNot(string email, ObjectParameter isExist)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmailExitOrNot", emailParameter, isExist);
        }
    
        public virtual ObjectResult<EmployeeInsertUpdateSelectDelete_Result> EmployeeInsertUpdateSelectDelete(Nullable<int> id, string firstName, string lastName, string gender, Nullable<int> salary, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeInsertUpdateSelectDelete_Result>("EmployeeInsertUpdateSelectDelete", idParameter, firstNameParameter, lastNameParameter, genderParameter, salaryParameter, statementTypeParameter);
        }
    
        public virtual ObjectResult<SignUpUser_Result> SignUpUser(Nullable<int> id, string firstName, string lastName, string email, string password, Nullable<bool> isEmailVerify, string activationCode, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isEmailVerifyParameter = isEmailVerify.HasValue ?
                new ObjectParameter("IsEmailVerify", isEmailVerify) :
                new ObjectParameter("IsEmailVerify", typeof(bool));
    
            var activationCodeParameter = activationCode != null ?
                new ObjectParameter("ActivationCode", activationCode) :
                new ObjectParameter("ActivationCode", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SignUpUser_Result>("SignUpUser", idParameter, firstNameParameter, lastNameParameter, emailParameter, passwordParameter, isEmailVerifyParameter, activationCodeParameter, statementTypeParameter);
        }
    
        public virtual int EmailExitOrNot1(string email, ObjectParameter isExist)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmailExitOrNot1", emailParameter, isExist);
        }
    }
}
